#include<stdio.h>
#include<string.h>
struct node{
    int map[9],now,f;
    char front;
}q[362881],ed;
bool used[100000000];
inline bool check(){
    int i,inv=0,j;
    for(i=0;i<9;i++)    
        for(j=0;j<i;j++)
            if(q[0].map[i] && q[0].map[i]<q[0].map[j])
                inv++;
    return (inv%2==0);
}
inline bool find(int a){
    for(int i=0;i<9;i++)
        if(q[a].map[i]!=ed.map[i])
            return false;
    return true;
}
inline int encode(int a){
    int sum=0,i;
    for(i=0;i<8;i++)
        sum=sum*10+q[a].map[i];
    return sum;
}
inline void print(int now){
    if(q[now].f==-1)  return;
    print(q[now].f);
    printf("%c",q[now].front);
}
main(){
    int i,j,k,l,tmp,t;
    scanf("%d%*c",&t);
    for(i=0;i<9;i++)
        ed.map[i]=i+1;
    ed.map[8]=0;
    while(t--){
        scanf("%*c");
        for(i=0;i<9;i++)
            scanf("%c%*c",&q[0].map[i]);
        for(i=0;i<9;i++){
            if(q[0].map[i]=='x')    q[0].map[i]=0;
            else                    q[0].map[i]-='0';
        }
        if(check()==0){
            puts("unsovable");
            continue;
        }
        i=0,j=1,q[0].front=0,q[0].f=-1;
        used[encode(0)]=1;
        while(i<j){
            if(find(i)) break;
            k=q[i].now;
            if(k==8){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[8]=q[i].map[5];
                q[j].map[5]=q[i].map[8];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=5;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[8]=q[i].map[7];
                q[j].map[7]=q[i].map[8];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=7;
                }
            }
            if(k==7){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[7]=q[i].map[8];
                q[j].map[8]=q[i].map[7];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=8;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[7]=q[i].map[6];
                q[j].map[6]=q[i].map[7];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=6;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[7]=q[i].map[4];
                q[j].map[4]=q[i].map[7];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=4;
                }
            }
            if(k==6){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[6]=q[i].map[7];
                q[j].map[7]=q[i].map[6];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=7;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[6]=q[i].map[3];
                q[j].map[3]=q[i].map[6];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=3;
                }
            }
            if(k==5){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[5]=q[i].map[8];
                q[j].map[8]=q[i].map[5];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=8;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[5]=q[i].map[2];
                q[j].map[2]=q[i].map[5];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=2;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[5]=q[i].map[4];
                q[j].map[4]=q[i].map[5];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=4;
                }
            }
            if(k==4){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[4]=q[i].map[5];
                q[j].map[5]=q[i].map[4];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=5;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[4]=q[i].map[3];
                q[j].map[3]=q[i].map[4];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=3;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[4]=q[i].map[7];
                q[j].map[7]=q[i].map[4];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=7;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[4]=q[i].map[1];
                q[j].map[1]=q[i].map[4];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=1;
                }
            }
            if(k==3){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[3]=q[i].map[4];
                q[j].map[4]=q[i].map[3];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=4;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[3]=q[i].map[0];
                q[j].map[0]=q[i].map[3];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='u';
                    q[j++].now=0;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[3]=q[i].map[6];
                q[j].map[6]=q[i].map[3];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=6;
                }
            }
            if(k==2){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[2]=q[i].map[5];
                q[j].map[5]=q[i].map[2];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=5;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[2]=q[i].map[1];
                q[j].map[1]=q[i].map[2];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=1;
                }
            }
            if(k==1){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[1]=q[i].map[2];
                q[j].map[2]=q[i].map[1];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=2;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[1]=q[i].map[4];
                q[j].map[4]=q[i].map[1];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=4;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[1]=q[i].map[0];
                q[j].map[0]=q[i].map[1];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='l';
                    q[j++].now=0;
                }
            }
            if(k==0){
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[0]=q[i].map[1];
                q[j].map[1]=q[i].map[0];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='r';
                    q[j++].now=1;
                }
                for(l=0;l<9;l++)
                    q[j].map[l]=q[i].map[l];
                q[j].map[0]=q[i].map[3];
                q[j].map[3]=q[i].map[0];
                tmp=encode(j);
                if(used[tmp]==0){
                    used[tmp]=1;
                    q[j].f=i;
                    q[j].front='d';
                    q[j++].now=3;
                }
            }
            i++;
        }
        if(i>=j)    puts("unsolvable");
        else{
            print(i);
            puts("");
        }
    }
}
